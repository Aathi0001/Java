t1 --> global and local variable
t2 --> MAX_VALUE AND MIN_VALUE of datatype
t3 --> Typecasting first type primitive typecasting in that Widening and Narrowing
t4 --> ASCII code to char & char to ASCII code
t5 --> Arithmetic operator and All Primitive Data Types + String Concatenation
t6 --> Count Number Of The Digits.
t7 --> Sum of Digit
t8 --> xylem or phloem number
t9 --> Palindrome number or Not
t10 --> do {.....}while(condition);{.....} and Switch Statement
t11 --> Random rumber guess
t12 --> Power using For loop
t13 --> Binary to Decimal value
t14 --> Decimal to Binary value
t15 --> Tables using for loop
t16 --> * using for loop
t17 --> Fibonancci Series
t18 --> Factorial Number
t19 --> Factors of a Number
t20 --> Prime Number or Not
t21 --> Neon Number
t22 --> Armstrong Number
t23 --> Happy Number
t24 --> Spy Number	
t25 --> leap year
t26 --> Odd or Even
t27 --> Operators
t28 --> Reverse Digits
t29 --> reverse Digit and Array
t30 --> SunriseViewBuildings
t31 --> Palindrome in Array
t32 --> Left Shift Program
t33 --> Right Shift Program
t34 --> Sort Binary Array
t35 --> Reverse CharArray With CaseSwap
t36 --> RemoveDuplicate


Methods: 
	It is a block of code which is used to perform the task.
	Every Method will be having their own name and there own taks to perform
Syntax:
    [Access Mofdifier] [Modifier] returntype MethodName([formalArguments])
    {
    	[task]
    }	
    
	Access Modifier, Modifier and formal argument are optional.
	
Types of Method:
	No Argument Method
	Parameterizer Method
	
	we cannot create a method inside another method.
	
	A combination of method name along with formal argument is called Method Signature.
	
	Access Modifier - It decide the visibility of the members. 
	Types: Public, Protected, Private, Default.
	
	Modifier - It decides the characteristics. 
	Types: Static, final, abstract, transient, native, synchronized.
	
	ReturnType - Returntype of the method will specify what data programmer will get once method execution is completed.
	Types: void, primitive or non-primitive datatype. Every method will have only one returntype.
	
	Return Keyword - It helps for the termination of method execution.
	
	
	For static method no need to create object to call the method
	for non-static method need to crate object to call the method
	
---------------------------------------------------------------------------------------------------------------------------------
	
Java is a high level object oriented, class based and platform independent programming language.
Key Features: Simple, object-oriented, secure, platform independent, robust, multithreaded, portable, distributed.

---------------------------------------------------------------------------------------------------------------------------------

Loop:
	A loop run the same block of code multiple times until a condition is false.
	
	for loop:
		used when you know how many times to run the loop.
	syntax:
		for(intialization; condition; update){
			//code to repeat
		}
		
	while loop:
		used when you don't know how many times but want to repeat as long as a condition is true.
	syntax:
		while(condition){
			//code to repeat
		}	
	
	do-while loop:
		used when run at least once even if the condition is false.
	syntax:
		do{
			//code to repeat
		}
		while(condition);
		
---------------------------------------------------------------------------------------------------------------------------------

Array:
	It is the collection of elements of the same type stored in a fixed size container.

Declaration and creating a array:
	int[] numbers = new int[5];              // Declaration with size
	int[] marks = {90, 80, 85, 70, 95};      // Declaration with values
	
2D Array:
	int[][] num = new int[2][3];
	2->rows
	3->columns
	
	num[0][0] - 1
	num[0][1] - 2
	num[0][2] - 3
	num[1][0] - 4
	num[1][1] - 5
	num[1][2] - 6	
	
	for(int i=0; i<num.length; i++){
		for(int j=0; j<num[i].length; j++){
			System.out.print(num[i][j]+ " ");
		}System.out.println()
	}
	
---------------------------------------------------------------------------------------------------------------------------------

Scanner Methods by Datatype:

Datatype		Methods

int				nextInt()
long			nextLong()
float			nextFloat()
double			nextDouble()
byte			nextByte()
short			nextShort()
boolean			nextBoolean()
char			next().charAt(0)
String(word)	next()	-> Reads up single word. Eg: Aathi
String(line)	nextLine()    ->Read entire line. Eg: My name is Aathi.

---------------------------------------------------------------------------------------------------------------------------------

Control Flow:
	if, else if, else:
		This statement helps you make decision in your program.
	syntax:
		if(condition 1){
			//run if condition is true
		}
		else if(conditon 2){
			//run if the previous was false 
		}
		.
		.
		.
		else{
			//run if none of above are true
		}
	
	switch statement:
		used when you want to compare one variable against multiple values.
	syntax:
		switch(variable){
		case value1:{
			//code;
			break;
		}
		case value2:{
			//code;
			break;
		}
		.
		.
		.
		default:
			//code if no case match
		}
		
	Break Statement:
		 It is used to immediately exit a loop or switch.
	syntax:
		break;
	eg:
		for(int i=0; i<5; i++){
			if(i==3){
				break;
			}System.out.println(i);
		}	
		
	output:
		1
		2
		3
		
	Continue Statement:
		used to skip the current iteration and move to the next one.
	syntax:
		continue;
	eg:
		for(int i=0; i<5; i++){
			if(i==3){
				continue;
			}System.out.println(i);
		}
		
	output:
		1
		2
		4
		5
		
---------------------------------------------------------------------------------------------------------------------------------
	
Functions / Methods in Java:
	A method in java is a block of code that performs a specific task. you can call it whenever needed helps avoid repeating code.
syntax:
	returnType MethodName(Parameter1, Parameter2,...)
	{
		return value;
	}
	
Types:
	1)void Method Without Parameter:
	
		public static void greet(){
			System.out.println("Welcome");
		}
		
	2)void Method With Parameter:
	
		public static void sum(int a, int b){
			System.out.println(a+b);
		}
		
	3)return Method Without Parameters
	
		public static int FixedNumber(){
			return 100;
		}
			
	4)return Method With Parameters:
	
		public static int Multiply(int a, int b){
			return (a*b);
		}
			
---------------------------------------------------------------------------------------------------------------------------------

Object Oriented Programming In Java:

Class and Objects:
	class is a blueprint or template for creating object.
	It defines properties (variable) & behaviors (methods).
	object is a real world instance of a class.
	

	

